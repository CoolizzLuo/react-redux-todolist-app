{"version":3,"sources":["hooks/useInput.js","components/TodoInput.js","redux/features/filter/filterSlice.js","components/TodoFilterButton.js","components/TodoItem.js","constants/data.js","redux/features/todo/todoSlice.js","hooks/useTodosStore.js","components/TodoApp.js","App.js","redux/store.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","handleChange","useCallback","e","currentTarget","handleEscKey","key","TodoInputWrapper","styled","form","Input","input","Button","button","TodoAddInput","addTodo","handleSubmit","preventDefault","trim","alert","onSubmit","type","onChange","onKeyUp","filterSlice","createSlice","name","initialState","filter","reducers","all","state","done","unDone","actions","selectorFilter","FilterBtnWrapper","div","$active","TodoFilterButton","filterValue","useSelector","dispatch","useDispatch","handleChangeFilter","action","Object","keys","map","onClick","TodoItemWrapper","li","TodoItemContent","isDone","TodoItemAction","TodoItem","todo","editing","setEditing","updateTodo","changeDoneTodo","deleteTodo","isEditing","useMemo","id","TodoEditing","content","handleUpdate","window","confirm","handleCancel","className","TodoShowing","TODO_LS_KEY","todos","JSON","parse","localStorage","getItem","v4","todoSlice","push","payload","forEach","index","findIndex","splice","isDoneToggle","clearTodos","selectorTodo","useTodosStore","handleAddTodo","handleUpdateTodo","handleIsDoneTodo","handleDeleteTodo","handleClearTodos","TodoItemList","ul","TodoFooter","TodoApp","handleInputAddTodo","TodoInput","length","Container","Header","header","Footer","footer","App","href","target","rel","store","configureStore","reducer","todoReducer","filterReducer","subscribe","getState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2da9f1a5.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\r\n\r\nconst useInput = (initialValue = '') => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const handleChange = useCallback((e) => setValue(e.currentTarget.value), [])\r\n  const handleEscKey = useCallback((e) => e.key === 'Escape' && setValue(''), [])\r\n\r\n  return { value, setValue, handleChange, handleEscKey }\r\n}\r\n\r\nexport default useInput","import { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport useInput from '../hooks/useInput'\r\n\r\nconst TodoInputWrapper = styled.form`\r\n  margin: 2rem 0 3rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 60%;\r\n  font-size: 1.2rem;\r\n  padding: 0.4rem 0.8rem;\r\n  outline: none;\r\n  border: none;\r\n  flex-grow: 1;\r\n  border-radius: 6px 0 0 6px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-size: 1rem;\r\n  padding: 0.4rem 0.8rem;\r\n  flex-grow: 1;\r\n  background: transparent;\r\n  border: 1px solid #fff;\r\n  border-radius: 0 6px 6px 0;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  &:hover {\r\n    background: #333;\r\n    transition: all 0.5s;\r\n  }\r\n  &:active {\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nconst TodoAddInput = ({ addTodo }) => {\r\n  const { value, setValue, handleChange, handleEscKey } = useInput()\r\n  const handleSubmit = useCallback((e) => {\r\n    e.preventDefault()\r\n\r\n    if (!value.trim()) return alert('Please input some words')\r\n    addTodo(value)\r\n    setValue('')\r\n  }, [addTodo, value, setValue])\r\n\r\n  return (\r\n    <TodoInputWrapper onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onKeyUp={handleEscKey} />\r\n      <Button>Add item</Button>\r\n    </TodoInputWrapper>\r\n  )\r\n}\r\n\r\nexport default TodoAddInput\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  filter: 'all'\r\n}\r\n\r\nexport const filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState,\r\n  reducers: {\r\n    all: (state) => {\r\n      state.filter = 'all'\r\n    },\r\n    done: (state) => {\r\n      state.filter = 'done'\r\n    },\r\n    unDone: (state) => {\r\n      state.filter = 'unDone'\r\n    },\r\n  }\r\n})\r\n\r\nexport const { all, done, unDone } = filterSlice.actions\r\nexport const selectorFilter = state => state.filter.filter\r\nexport default filterSlice.reducer\r\n","import styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { filterSlice, selectorFilter } from '../redux/features/filter/filterSlice'\r\n\r\n\r\nconst FilterBtnWrapper = styled.div`\r\n  margin: 2rem 0;\r\n  display: flex;\r\n`\r\n\r\nconst Button = styled.button`\r\n  flex: 1;\r\n  padding: 0.5rem 0;\r\n  font-size: 1.1rem;\r\n  color: #555;\r\n  border: 1px solid #ccc;\r\n  transition: background 0.2s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #f9ca24;\r\n    color: #333;\r\n  }\r\n  ${({ $active }) => $active && `\r\n    background: #f9ca24;\r\n    color: #333;\r\n  `}\r\n  \r\n`\r\n\r\nconst TodoFilterButton = () => {\r\n  const filterValue = useSelector(selectorFilter)\r\n  const dispatch = useDispatch()\r\n  const handleChangeFilter = (action) => () => dispatch(filterSlice.actions[action]())\r\n\r\n  return (\r\n    <FilterBtnWrapper>\r\n      {\r\n        Object.keys(filterSlice.actions).map((action) => (\r\n          <Button\r\n            key={action}\r\n            $active={filterValue === action}\r\n            onClick={handleChangeFilter(action)}>\r\n            {action}\r\n          </Button>\r\n        ))\r\n      }\r\n    </FilterBtnWrapper>\r\n  )\r\n}\r\n\r\nexport default TodoFilterButton\r\n","import { useMemo, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport useInput from '../hooks/useInput'\r\n\r\n\r\nconst TodoItemWrapper = styled.li`\r\n  margin: 0 -3rem 4px;\r\n  padding: 1.1rem 3rem;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.25);\r\n  }\r\n`\r\n\r\nconst TodoItemContent = styled.div`\r\n  max-width: 65%;\r\n  h3 {\r\n    font-size: 1.3rem;\r\n    font-weight: 500;\r\n    word-break: break-all;\r\n    transition: all .6s;\r\n\r\n    ${({ isDone }) => isDone && `\r\n      opacity: 0.4;\r\n      text-decoration: line-through;\r\n      font-style: italic;\r\n    `}\r\n  }\r\n  input {\r\n    max-width: 90%;\r\n    font-size: 1.1rem;\r\n    padding: 0.1rem;\r\n  }\r\n`\r\n\r\nconst TodoItemAction = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    margin: 0 0.5rem;\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    margin-top: -0.4rem;\r\n    cursor: pointer;\r\n    &:first-child {\r\n      transform: translateY(2%) scale(1.05);\r\n    }\r\n    &:last-child {\r\n      transform: translateY(-1%) scale(1.05);\r\n    }\r\n    &:hover {\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`\r\n\r\nconst TodoItem = ({ todo, editing, setEditing, updateTodo, changeDoneTodo, deleteTodo }) => {\r\n  const isEditing = useMemo(() => editing === todo.id, [editing, todo])\r\n\r\n  const TodoEditing = () => {\r\n    const { value, setValue, handleChange } = useInput(todo.content)\r\n    const handleUpdate = useCallback(() => {\r\n      if (!value.trim()) return alert('must be have input value')\r\n      if (!window.confirm('sure update todo ?')) return\r\n\r\n      updateTodo(todo.id, value)\r\n      setValue('')\r\n      setEditing(null)\r\n    }, [setValue, value])\r\n    const handleCancel = useCallback(() => {\r\n      if (window.confirm('sure give editing ?')) setEditing(null)\r\n    }, [])\r\n\r\n    const handleInputKeyUp = (e) => {\r\n      if (e.key === 'Enter') return handleUpdate()\r\n      if (e.key === 'Escape') return handleCancel()\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TodoItemContent>\r\n          <input type=\"text\" value={value} onChange={handleChange} onKeyUp={handleInputKeyUp} />\r\n        </TodoItemContent>\r\n        <TodoItemAction>\r\n          <button onClick={handleUpdate}><i className=\"fa fa-check\"></i></button>\r\n          <button onClick={handleCancel}><i className=\"fa fa-close\"></i></button>\r\n        </TodoItemAction>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const TodoShowing = () => {\r\n    const handleSetEdit = () => {\r\n      if (!editing || (!isEditing && window.confirm('give up editing ?'))) setEditing(todo.id)\r\n    }\r\n    const handleDeleteTodo = () => {\r\n      if (window.confirm(`sure delete this todo: ${todo.content}`)) deleteTodo(todo.id)\r\n    }\r\n    const handleChangeDone = () => changeDoneTodo(todo.id)\r\n\r\n    return (\r\n      <>\r\n        <TodoItemContent isDone={todo.isDone}>\r\n          <h3>{todo.content}</h3>\r\n        </TodoItemContent>\r\n        <TodoItemAction>\r\n          <button onClick={handleSetEdit}><i className=\"fa fa-edit\"></i></button>\r\n          <button onClick={handleChangeDone}>\r\n            <i className={`fa ${todo.isDone ? 'fa-check-square' : 'fa-square'}`}></i>\r\n          </button>\r\n          <button onClick={handleDeleteTodo}><i className=\"fa fa-trash\"></i></button>\r\n        </TodoItemAction>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TodoItemWrapper>\r\n      {isEditing ? <TodoEditing /> : <TodoShowing />}\r\n    </TodoItemWrapper>\r\n  )\r\n}\r\n\r\nexport default TodoItem","export const TODO_LS_KEY = 'todos'\r\nexport const TITLE_DESCRIPTION = 'Get things done, one item at a time.'\r\nexport const ARTHUR = 'Enzo Luo'\r\nexport const ARTHUR_GITHUB = 'https://github.com/CoolizzLuo'\r\nexport const ARTHUR_MAIL = 'coolizz1010@gmail.com'\r\nexport const COPYRIGHT_YEAR = '2021'","import { createSlice } from '@reduxjs/toolkit'\r\nimport { v4 } from 'uuid'\r\nimport { TODO_LS_KEY } from '../../../constants/data'\r\n\r\nconst initialState = {\r\n  todos: JSON.parse(window.localStorage.getItem(TODO_LS_KEY)) ||\r\n    [\r\n      { id: v4(), content: '吃飯？', isDone: false },\r\n      { id: v4(), content: '睡覺！', isDone: true },\r\n      { id: v4(), content: '打咚咚？！', isDone: false }\r\n    ]\r\n}\r\n\r\nexport const todoSlice = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.todos.push({\r\n        id: v4(),\r\n        content: action.payload.content,\r\n        isDone: false\r\n      })\r\n    },\r\n    updateTodo: (state, action) => {\r\n      state.todos.forEach(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return todo.content = action.payload.content\r\n        }\r\n        return todo\r\n      })\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      const index = state.todos.findIndex((todo) => todo.id === action.payload.id)\r\n      state.todos.splice(index, 1)\r\n    },\r\n    isDoneToggle: (state, action) => {\r\n      state.todos.forEach(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return todo.isDone = !todo.isDone\r\n        }\r\n        return todo\r\n      })\r\n    },\r\n    clearTodos: (state) => {\r\n      state.todos = []\r\n    }\r\n  }\r\n})\r\n\r\nexport const { addTodo, deleteTodo, updateTodo, isDoneToggle, clearTodos } = todoSlice.actions\r\nexport const selectorTodo = state => state.todos.todos\r\nexport default todoSlice.reducer\r\n","import { useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectorFilter } from '../redux/features/filter/filterSlice'\r\nimport { addTodo, deleteTodo, updateTodo, isDoneToggle, clearTodos, selectorTodo } from '../redux/features/todo/todoSlice'\r\n\r\n\r\nconst useTodosStore = () => {\r\n  const filterValue = useSelector(selectorFilter)\r\n  const todos = useSelector(selectorTodo)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddTodo = (content) => dispatch(addTodo({ content }))\r\n  const handleUpdateTodo = (id, content) => dispatch(updateTodo({ id, content }))\r\n  const handleDeleteTodo = (id) => dispatch(deleteTodo({ id }))\r\n  const handleIsDoneTodo = (id) => dispatch(isDoneToggle({ id }))\r\n  const handleClearTodos = () => dispatch(clearTodos())\r\n\r\n  const filterTodos = useMemo(() => {\r\n    switch (filterValue) {\r\n      case 'done':\r\n        return todos.filter(todo => todo.isDone)\r\n      case 'unDone':\r\n        return todos.filter(todo => !todo.isDone)\r\n      case 'all':\r\n      default:\r\n        return todos\r\n    }\r\n  }, [filterValue, todos])\r\n\r\n  return {\r\n    todos: filterTodos,\r\n    handleAddTodo,\r\n    handleUpdateTodo,\r\n    handleIsDoneTodo,\r\n    handleDeleteTodo,\r\n    handleClearTodos\r\n  }\r\n}\r\n\r\nexport default useTodosStore\r\n","import { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport TodoInput from './TodoInput'\r\nimport TodoFilterButton from './TodoFilterButton'\r\nimport TodoItem from './TodoItem'\r\nimport useTodosStore from '../hooks/useTodosStore'\r\n\r\nconst TodoItemList = styled.ul`\r\n  margin: 3rem 0 1.5rem;\r\n`\r\n\r\nconst TodoFooter = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-size: 1rem;\r\n  padding: .4rem .8rem;\r\n  color: #555;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  box-shadow: .1rem .1rem .1rem #999;\r\n  cursor: pointer;\r\n  &.active {\r\n    transform: translateY(.2rem);\r\n    box-shadow: none;\r\n    transform: scale(1.05);\r\n  }\r\n  &:hover {\r\n    background: #f9ca24;\r\n    color: #333;\r\n  }\r\n`\r\n\r\nconst TodoApp = () => {\r\n  const [editing, setEditing] = useState(null)\r\n\r\n  const {\r\n    todos,\r\n    handleAddTodo,\r\n    handleUpdateTodo,\r\n    handleIsDoneTodo,\r\n    handleDeleteTodo,\r\n    handleClearTodos\r\n  } = useTodosStore()\r\n\r\n  const handleInputAddTodo = useCallback((value) => {\r\n    if (editing) {\r\n      alert('please complete your editing')\r\n      return\r\n    }\r\n    handleAddTodo(value)\r\n  }, [editing, handleAddTodo])\r\n\r\n  const handleClearTodo = () => {\r\n    if (!todos.length) return alert('already empty data !')\r\n    if (window.confirm('sure clear all todos ?')) {\r\n      handleClearTodos()\r\n      setEditing(null)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <TodoInput addTodo={handleInputAddTodo} />\r\n      <TodoFilterButton />\r\n      <TodoItemList>\r\n        {\r\n          todos.map((todo) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              editing={editing}\r\n              setEditing={setEditing}\r\n              updateTodo={handleUpdateTodo}\r\n              changeDoneTodo={handleIsDoneTodo}\r\n              deleteTodo={handleDeleteTodo} />\r\n          ))\r\n        }\r\n      </TodoItemList>\r\n      <TodoFooter>\r\n        total: {todos.length}\r\n        <Button onClick={handleClearTodo}>Clear all</Button>\r\n      </TodoFooter>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoApp;","import './App.css'\r\nimport styled from 'styled-components'\r\nimport TodoApp from './components/TodoApp'\r\nimport { TITLE_DESCRIPTION, ARTHUR, ARTHUR_GITHUB, COPYRIGHT_YEAR } from './constants/data'\r\n\r\nconst Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 2rem 3rem 0;\r\n  max-width: 500px;\r\n  color: #fff;\r\n  background: #6a89cc;\r\n  border-radius: 8px;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 20px -20px 0px 0px rgba(100, 100, 100, 0.1);\r\n`\r\n\r\nconst Header = styled.header`\r\n  h1 {\r\n    font-size: 2.6rem;\r\n    font-weight: 700;\r\n    letter-spacing: 0.1rem;\r\n    margin-bottom: 0.6rem;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    font-size: 0.8rem;\r\n    font-weight: 300;\r\n    margin-bottom: 0.7rem;\r\n    margin-top: 0.2rem;\r\n  }\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  letter-spacing: 0.05rem;\r\n  background: #6a89cc;\r\n  text-align: center;\r\n  margin-top: 3rem;\r\n  padding: 0.1rem 0.5rem;\r\n\r\n  span {\r\n    display: block;\r\n    font-size: .9rem;\r\n    font-weight: 300;\r\n    margin-bottom: 0.7rem;\r\n    margin-top: 0.2rem;\r\n  }\r\n\r\n  a {\r\n    color: #f9ca24;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    font-style: italic;\r\n  }\r\n`\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <h1>Todo List\r\n          <span>{TITLE_DESCRIPTION}</span>\r\n        </h1>\r\n      </Header>\r\n      <TodoApp />\r\n      <Footer>\r\n        <span>&copy; copyright {COPYRIGHT_YEAR} by <a href={ARTHUR_GITHUB} target=\"_blank\" rel=\"noreferrer\">{ARTHUR}</a></span>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport todoReducer from './features/todo/todoSlice'\r\nimport filterReducer from './features/filter/filterSlice'\r\nimport { TODO_LS_KEY } from '../constants/data'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    todos: todoReducer,\r\n    filter: filterReducer\r\n  }\r\n})\r\n\r\nstore.subscribe(() => {\r\n  const { todos } = store.getState()\r\n  window.localStorage.setItem(TODO_LS_KEY, JSON.stringify(todos.todos))\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store} >\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}